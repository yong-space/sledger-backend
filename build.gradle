plugins {
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'io.freefair.lombok' version '6.6.1'
    id 'java'
    id 'jacoco'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

repositories { mavenCentral() }

def testContainersVersion = '1.17.6'

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
    implementation "org.springframework.boot:spring-boot-starter-mail"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.bouncycastle:bcprov-jdk18on:1.72"
    implementation "com.auth0:java-jwt:4.2.1"
    implementation "com.opencsv:opencsv:5.7.1"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "org.testcontainers:testcontainers:$testContainersVersion"
    testImplementation "org.testcontainers:junit-jupiter:$testContainersVersion"
    testImplementation "org.testcontainers:mongodb:$testContainersVersion"
    testImplementation "com.icegreen:greenmail-junit5:2.0.0-alpha-3"
}

tasks.named("jar") {enabled = false }

tasks.withType(Test).configureEach { useJUnitPlatform() }
test {
    reports {
        junitXml.required = false
        html.required = false
    }
    finalizedBy jacocoTestReport
    jacoco { excludes = [ 'tech.sledger.model.*' ] }
}
jacocoTestReport {
    dependsOn test
    afterEvaluate {
        getClassDirectories().setFrom(classDirectories.files.collect {
            fileTree(dir: it, exclude: [ 'tech/sledger/*.class', 'tech/sledger/model/**' ])
        })
    }
    reports {
        xml.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}
