plugins {
    id "com.github.ben-manes.versions" version "0.51.0"
    id "org.springframework.boot" version "3.3.5"
    id "io.spring.dependency-management" version "1.1.6"
    id "io.freefair.lombok" version "8.10.2"
    id "org.graalvm.buildtools.native" version "0.10.3"
    id "java"
    id "jacoco"
}

group = "tech.sledger"

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(23))
    }
}

repositories { mavenCentral() }

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-parameters")
}

def testContainersVersion = "1.20.3"

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "com.resend:resend-java:4.0.0"
    implementation "org.bouncycastle:bcprov-jdk18on:1.79"
    implementation "com.auth0:java-jwt:4.4.0"
    implementation ("com.opencsv:opencsv:5.9") {
        exclude group: "commons-logging", module: "commons-logging"
    }
    implementation "org.apache.poi:poi:5.3.0"
    developmentOnly "org.springframework.boot:spring-boot-devtools"

    testRuntimeOnly "org.junit.platform:junit-platform-launcher:1.11.3"
    testImplementation "org.junit.jupiter:junit-jupiter:5.11.3"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "org.testcontainers:testcontainers:$testContainersVersion"
    testImplementation "org.testcontainers:junit-jupiter:$testContainersVersion"
    testImplementation "org.testcontainers:mongodb:$testContainersVersion"
}

tasks.named("jar") { enabled = false }

tasks.withType(Test).configureEach { useJUnitPlatform() }
test {
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
    reports {
        junitXml.required = false
        html.required = false
    }
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test
    afterEvaluate {
        getClassDirectories().setFrom(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                "tech/sledger/*.class",
                "tech/sledger/model/**",
                "tech/sledger/service/ResendService.class",
                "tech/sledger/config/AotHints.class"
            ])
        })
    }
    reports {
        xml.required = true
        html.outputLocation = layout.buildDirectory.dir("jacocoHtml")
    }
}

bootBuildImage {
    imageName = System.getenv("IMAGE_NAME") ?: "sledger-backend"
    publish = System.getenv("DOCKER_PASS") != null
    createdDate = "now"
    environment = [
        "BP_JVM_VERSION": "23",
        "BP_SPRING_CLOUD_BINDINGS_DISABLED": "true",
        "BP_NATIVE_IMAGE_BUILD_ARGUMENTS": "-H:+AddAllCharsets"
    ]
    docker {
        publishRegistry {
            username = System.getenv("DOCKER_USER")
            password = System.getenv("DOCKER_PASS")
        }
    }
}
